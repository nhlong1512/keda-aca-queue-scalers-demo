name: Build and deploy to Azure

on:
  push:
    branches:
      - main

env:
  SUBSCRIPTIONID: c38893c4-15b8-4925-bad8-f5486addcc7d
  RESOURCEGROUP: keda-demo-rg
  LOCATION: eastus
  PREFIX: keda-demo-

jobs:
  provision:
    name: Provision
    runs-on: ubuntu-latest
    outputs:
      queueName: ${{ steps.createAzureResources.outputs.queueName }}
      queueConnectionString: ${{ steps.createAzureResources.outputs.queueConnectionString }}
    steps:
    - uses: actions/checkout@master

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Azure Resource Group
      run: |
        if [ $(az group exists --name ${{ env.RESOURCEGROUP }}) = false ]; then
          az group create -n ${{ env.RESOURCEGROUP }} -l ${{ env.LOCATION }}
        fi

    - uses: azure/arm-deploy@v1
      name: Create Azure Resources
      id: createAzureResources
      with:
        subscriptionId: ${{ env.SUBSCRIPTIONID }}
        resourceGroupName: ${{ env.RESOURCEGROUP }}
        template: ./src/Environment/master.json
        parameters: prefix="${{ env.PREFIX }}"

  test:
    name: Put message in queue
    needs:  [provision]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        container: [1]
    steps:
    - name: Put message 1
      shell: bash
      run: |
        az storage message put \
          --content "Hello Queue Reader App ${{ matrix.container }}-1" \
          --queue-name "${{ needs.provision.outputs.queueName }}" \
          --connection-string "${{ needs.provision.outputs.queueConnectionString }}"
          
  cleanup:
    name: Clean Up
    needs: [test]
    runs-on: ubuntu-latest
    environment: 'cleanup'
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Delete Log Analytics Workspace
      continue-on-error: true
      run: |
        az monitor log-analytics workspace delete -g ${{ env.RESOURCEGROUP }} \
          --workspace-name ${{ env.LOGANALYTICSWORKSPACENAME }} \
          --force true --yes

    - name: Delete Resource Group
      continue-on-error: true
      run: |
        az group delete -g ${{ env.RESOURCEGROUP }} --yes
